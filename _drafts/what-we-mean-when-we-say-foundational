When we introduce the Tech Learning Collective, our default description tends to be that TLC offers "foundational technology education to radical organizers and community oriented individuals."

While a lot of those terms could be (and probably should be) explicated, for now, let's examine further the idea of the "foundational," possibly the most ambiguous of the terms used.

For starters, for us, "foundational" means, don't start with the code.


It isn't that learning to program is bad or something to be discouraged. But TLC was in part formed as a foil for the now Goliath "learn to code" culture, which has become a force for turning prospective creators into followers.

Moreover, code bootcamps rarely, if ever, provide fundamental context for where that code runs, how computers communicate, or indeed, what they actually are.

And then there's the word itself: bootcamp. A word traditionally associated with grueling military training. Perhaps the term rose in popularity for the idea it conjures: the promise of making someone ready as quickly as possible for the promised  trenches of the tech job market.

But then, many code bootcamps fail to follow through on this very promise, as many companies and organizations automatically disqualify candidates who have come out of code or tech bootcamps.[1]

Yet somehow all of this still remains beside the point, regularly racking focus to the job market and employability.


We don't often talk about growing our own food this way, or learning how to purify water, or knit, or construction, or plumbing. We don't usually try to attend a food growing bootcamp in the hopes that our gardens will make us high paying salaries. Typically those kinds of projects are embarked for the sheer joy of doing them, or for their immediate benefit of feeding people.

TLC is a kind of counter-school, one which pushes against the current of indoctrination into "the Industry" and towards something similarly immediate, something comparably real.

Our primary question is always: how can we leverage our digital devices, miraculous as they are, to be used for the most measurable good possible?


Much like the advice that says try to eat foods whose ingredients you can pronounce, TLC and its cohorts believe that with technology, we ought to aim for the kind of good that we can understand, that isn't barred behind impressive insider jargon, but which reaches out in simplicity towards actualized social good.

What that looks like is dependent upon the person or people who take it up, and the concerns or issues they face in their lives and within their communities.

An intranet free of surveillance becomes important for a community deeply impacted by it. A co-op computer lab led by a neighbor may become important for a person who has never had access to technology, perhaps who has never believed they would.

Digital tools for organization for projects that exist in the physical world can ease labor, not in a mimicry of a fully automated utopia but rather within the same balance we share between gardens and bad weather.

So TLC does not begin with code. It is our fundamental belief, in fact, that code comes last. Infrastructure comes first.


The courses we offer range from Networking basics — topics ranging from how routers work to how to construct a network to understanding the components of one, and the differences between one to another — all the way to advanced Security topics, where we parse the history and actuality of hacking, and review concepts from both offensive and defensive positions.

When we teach Web design, it doesn't begin with JavaScript, but rather with document flow, with the scaffolding that makes up a webpage, and with how that affects both security and accessibility.

As important as the content of our classes is our chosen pedagogy. Rather than confine participants to a single method, our classes take form according to what is most appropriate for a given class. Materials are provided where necessary, and the students' decisions as to how they want to learn becomes just as important as what they've chosen to learn.

Because we do not take a pedagogical stance that dictates that there is a single body or goal that is objectively the "most important," wherever the room wants to go, whatever and however our students want to learn, is where we go, together.

For us, "foundational" means uncovering an ethos and methodology that is radically contra the standard code bootcamp, or any "tech bootcamp." But equally as importantly, it also bears with it shadows of reinvention — of redefining a culture, an imaginary, a way of approaching digital devices, just as much as how to learn about using them.

 

[1] https://www.bloomberg.com/news/features/2016-12-06/want-a-job-in-silicon-valley-keep-away-from-coding-schools
